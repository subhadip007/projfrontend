[{"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/index.js":"1","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/Routes.js":"2","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/Signup.js":"3","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/AdminDashBoard.js":"4","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/UserDashBoard.js":"5","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Cart.js":"6","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/AddCategory.js":"7","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/Signin.js":"8","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/UpdateProduct.js":"9","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/UpdateCategories.js":"10","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/ManageProducts.js":"11","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/ManegeCategories.js":"12","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Home.js":"13","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/AddProduct.js":"14","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/ManageUser.js":"15","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/AdminRoutes.js":"16","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/PrivateRoutes.js":"17","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Base.js":"18","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/userapicalls.js":"19","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/backend.js":"20","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/index.js":"21","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Payments.js":"22","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Card.js":"23","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/CartHelper.js":"24","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/coreapicalls.js":"25","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/helper/adminapicall.js":"26","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Menu.js":"27","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/OrderHelper.js":"28","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/PaymentHelper.js":"29","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/ImageHelper.js":"30","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/razorpay.js":"31"},{"size":155,"mtime":1673536806008,"results":"32","hashOfConfig":"33"},{"size":1932,"mtime":1673536806006,"results":"34","hashOfConfig":"33"},{"size":5862,"mtime":1673536806009,"results":"35","hashOfConfig":"33"},{"size":2584,"mtime":1673536806008,"results":"36","hashOfConfig":"33"},{"size":2824,"mtime":1673536806009,"results":"37","hashOfConfig":"33"},{"size":1502,"mtime":1673536806007,"results":"38","hashOfConfig":"33"},{"size":2418,"mtime":1673536806006,"results":"39","hashOfConfig":"33"},{"size":3514,"mtime":1673536806009,"results":"40","hashOfConfig":"33"},{"size":5506,"mtime":1673536806006,"results":"41","hashOfConfig":"33"},{"size":2864,"mtime":1673536806006,"results":"42","hashOfConfig":"33"},{"size":2300,"mtime":1673536806006,"results":"43","hashOfConfig":"33"},{"size":2370,"mtime":1673536806006,"results":"44","hashOfConfig":"33"},{"size":2072,"mtime":1673536806007,"results":"45","hashOfConfig":"33"},{"size":4907,"mtime":1673536806006,"results":"46","hashOfConfig":"33"},{"size":5329,"mtime":1673536806009,"results":"47","hashOfConfig":"33"},{"size":565,"mtime":1673536806007,"results":"48","hashOfConfig":"33"},{"size":564,"mtime":1673536806007,"results":"49","hashOfConfig":"33"},{"size":1786,"mtime":1673536806007,"results":"50","hashOfConfig":"33"},{"size":918,"mtime":1673536806009,"results":"51","hashOfConfig":"33"},{"size":50,"mtime":1673536806007,"results":"52","hashOfConfig":"33"},{"size":1390,"mtime":1673536806007,"results":"53","hashOfConfig":"33"},{"size":4965,"mtime":1673536806007,"results":"54","hashOfConfig":"33"},{"size":3443,"mtime":1673536806007,"results":"55","hashOfConfig":"33"},{"size":1221,"mtime":1673536806008,"results":"56","hashOfConfig":"33"},{"size":432,"mtime":1673536806008,"results":"57","hashOfConfig":"33"},{"size":3436,"mtime":1673536806007,"results":"58","hashOfConfig":"33"},{"size":4023,"mtime":1673536806007,"results":"59","hashOfConfig":"33"},{"size":455,"mtime":1673536806008,"results":"60","hashOfConfig":"33"},{"size":850,"mtime":1673536806008,"results":"61","hashOfConfig":"33"},{"size":556,"mtime":1673536806009,"results":"62","hashOfConfig":"33"},{"size":1357,"mtime":1673536806008,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qk57in",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/index.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/Routes.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/Signup.js",["143"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"../auth/helper\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    lastname:\"\",\n    email: \"\",\n    password:\"\",\n    phnumber:\"\",\n    address1:\"\",\n    address2:\"\",\n    postalcode: \"\",\n    error: \"\",\n    success: false\n  });\n  const [field,setField]= useState(\"password\");\n  const { name,lastname,email,password,phnumber,address1,address2,postalcode,error, success } = values;\n\n  //for changing the state of each value\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    \n   \n    signup({ name,lastname,phnumber, email,password,postalcode,address1,address2 })  //this signup has been brought from the  helper\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, success: false });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            lastname:\"\",\n            email: \"\",\n            password:\"\",\n            password1:\"\",\n            phnumber:\"\",\n            address1:\"\",\n            address2:\"\",\n            postalcode: \"\",\n            error: \"\",\n            success: true\n          });\n        }\n      })\n      .catch(console.log(\"Error in signup\"));\n    \n  };\n\nlet myFunction=()=>\n{\n    if(field==\"password\"){\n      setField(\"text\")\n    }else{\n      setField(\"password\")\n    }\n   \n  }\n  \n  const signUpForm = () => {\n    return (\n      <form>\n      <div className=\"row\">\n     \n        <div className=\"col-6  text-left\">\n          \n            <div className=\"form-group\">\n              <label className=\"text-light\">Name(Username)<span style={{color:\"red\"}}>*</span></label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"name\")}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Last Name</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"lastname\")}\n                type=\"text\"\n                value={lastname}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email<span style={{color:\"red\"}}>*</span></label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"email\")}\n                type=\"email\"\n                value={email}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password<span style={{color:\"red\"}}>*</span></label>\n              <input\n                onChange={handleChange(\"password\")}\n                className=\"form-control\"\n                type={field}\n                value={password}\n              />\n              <input type=\"checkbox\" onClick={myFunction}/>Show Password\n            </div>\n            </div>\n            <div className=\"col-6  text-left\">\n            <div className=\"form-group\">\n              <label className=\"text-light\">Phone Number<span style={{color:\"red\"}}>*</span></label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"phnumber\")}\n                type=\"text\"\n                value={phnumber}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Address 1<span style={{color:\"red\"}}>*</span></label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"address1\")}\n                type=\"text\"\n                value={address1}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Address2</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"address2\")}\n                type=\"text\"\n                value={address2}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Postal Code<span style={{color:\"red\"}}>*</span></label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"postalcode\")}\n                type=\"text\"\n                value={postalcode}\n              />\n            </div>\n            \n          \n        </div>\n        <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n      </div>\n      </form>\n    );\n  };\n\n  const successMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please{\" \"}\n            <Link to=\"/signin\">Login Here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign up page\" description=\"A page for user to sign up!\">\n      {successMessage()}\n      {errorMessage()}\n      {signUpForm()}\n      {/* <p className=\"text-white text-center\">{JSON.stringify(values)}</p> */}\n    </Base>\n  );\n};\n\nexport default Signup;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/AdminDashBoard.js",["144"],"import React from 'react'\nimport Base from '../core/Base'\nimport {isAutheticated} from '../auth/helper/index'\nimport { Link } from 'react-router-dom'\n \n\nconst  AdminDashboard=() =>{\n\nconst {user:{name,email,role}}= isAutheticated()\n\nconst adminLeftSide=()=>{\n    return(\n        <div className='card'>\n                   <h4 className='card-header bg-dark text-white'>Admin Navigation </h4>\n             <ul className='list-group'>\n                 <li className='list-group-item'>\n                     <Link to='/admin/create/category'  className='nav-link text-success'>Create Category</Link>\n                 </li>\n                 <li className='list-group-item'>\n                     <Link to='/admin/categories'  className='nav-link text-success'>Manege Category</Link>\n                 </li>\n                 <li className='list-group-item'>\n                     <Link to='/admin/products'  className='nav-link text-success'>Manege product</Link>\n                 </li>\n                 <li className='list-group-item'>\n                     <Link to='/admin/create/product'  className='nav-link text-success'>Create product</Link>\n                 </li>\n                 <li className='list-group-item'>\n                     <Link to='/admin/create/orders'  className='nav-link text-success'>Manege Orders</Link>\n                 </li>\n             </ul>\n               </div>\n    )\n}\nconst adminRightSide=()=>{\n    return(\n        <div className='card mb-4'>\n                 <h4 className='card-header'>Admin Info</h4>\n                 <ul className='list-group'>\n                     <li className='list-group-item'>\n                        <p> <span className='badge badge-success mr2'>Name:</span> {name}</p>\n                     </li>\n                     <li className='list-group-item'>\n                        <p> <span className='badge badge-success mr2'>Email:</span> {email}</p>\n                     </li>\n                     <li className='list-group-item'>\n                        <p> <span className='badge badge-danger mr2'>Admin Area</span> </p>\n                     </li>\n                 </ul>\n        </div>\n    )\n};\n    return (\n       <Base title='Admin Dashboard' description='Manage your products here '  className='container  p-4'>\n          \n           <div className='row'>\n          <div className='col-4'>\n          {adminLeftSide()}\n\n          </div>\n          <div className=' col-md-auto'>\n          {adminRightSide()}\n          </div>\n           </div>\n           \n          \n          \n       </Base>\n    )\n};\n\nexport default AdminDashboard;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/UserDashBoard.js",["145","146","147"],"import React, { useEffect, useState } from 'react'\nimport Base from '../core/Base'\nimport \"../styles/userDash.css\"\nimport {Link} from 'react-router-dom'\n\nimport { isAutheticated } from \"../auth/helper/index\"\nimport { getUser } from './helper/userapicalls'\n\n\n\n\n\n\n\n const  UserDashboard=() =>{\n    const[user,setUser]=useState([])\n     const[date,setDate]=useState()\n    //  const [purchases,setPurchases]=useState([])\\\n    let purchases=[];\n    const userId = isAutheticated() && isAutheticated().user._id;\n    const token = isAutheticated() && isAutheticated().token;\n\nconst getUserData=(userId,token)=>{\n    getUser(userId,token).then(data=>(\n        setUser(data) ))\n}\n\n\nuseEffect(() => {\n   getUserData(userId,token)\n   console.log(purchases.length)\n//   setPurchases(user.purchases)\npurchases= user.purchases;\n   \n}, [])\n\nreturn (\n       <Base title='User Dashboard'>\n          <div className=\"user-dash\">\n    <ul role=\"tablist\" className=\"nav nav-tabs row\">\n        <li role=\"presentation\" className=\"nav-item col-6\"><a role=\"tab\" data-bs-toggle=\"tab\" className=\"nav-link text-center active\" href=\"#tab-1\">User Profile <i class=\"fas align-midlle fa-user-cog\"></i></a></li>\n        <li role=\"presentation\" className=\"nav-item col-6\"><a role=\"tab\" data-bs-toggle=\"tab\" className=\"nav-link text-center\" href=\"#tab-2\">Purcheses <i class=\"fas fa-shopping-bag\"></i></a></li>\n        \n    </ul>\n    <div className=\"tab-content\">\n        <div role=\"tabpanel\" className=\"tab-pane active \" id=\"tab-1\">\n        <div className=\"row\">\n        <h5 className=\"col-4 text-center field \">Username:  </h5>\n            <h5 className=\"text-center data col-8\">{user.name}</h5>\n        <h5 className=\"col-4 text-center field \">Email:  </h5>\n            <h5 className=\"text-center data col-8\">{user.email}</h5>\n        <h5 className=\"col-4 text-center field \">Ph number:  </h5>\n            <h5 className=\"text-center data col-8\">{user.phnumber}</h5>\n        <h5 className=\"col-4 text-center field \">Address 1:  </h5>\n            <h5 className=\"text-center data col-8\">{user.address1}</h5>\n        <h5 className=\"col-4 text-center field \">postal code:  </h5>\n            <h5 className=\"text-center data col-8\">{user.postalcode}</h5>\n            \n           \n            </div>\n            <div class=\"d-grid gap-2\">\n            <button type=\"button\" class=\"btn mt-4 btn-primary \"><i class=\"fas fa-cogs\"></i> <Link to=\"/user/dashboard/updateuser\" className=\"edit\">Edit</Link></button>\n            </div>\n        </div>\n        <div role=\"tabpanel\" className=\"tab-pane\" id=\"tab-2\">\n           \n            {(purchases.length) ? (<p>products</p>):(<p className=\"text-center bg-danger btn-lg mt-2\">You Havent purchased anything yet 😮 !!</p>)}\n        </div>\n        \n    </div>\n</div>\n       </Base>\n    )\n}\n\n\n\n\n\n\nexport default UserDashboard;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Cart.js",["148"],"import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart } from \"./helper/CartHelper\";\nimport Payments from \"./Payments\";\n// import StripeCheckout from \"./StripeCheckout\";\n\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [reload, setReload] = useState(false)\n\n\n  useEffect(() => {\n    setProducts(loadCart());\n  }, [reload]);\n\n  const loadAllProducts = (products) => {\n    return (\n      <div>\n        <h2>This section is to load products</h2>\n        {products.map((product, index) => (\n          <Card\n            key={index}\n            product={product}\n            removeFromCart={true}\n            addtoCart={false}\n            setReload={setReload}\n            reload={reload}\n          />\n        ))}\n      </div>\n    );\n  };\n  // const loadCheckout = () => {\n  //   return (\n  //     <div>\n  //       <h2>This section for checkout</h2>\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <Base title=\"Cart Page\" description=\"Ready to checkout\">\n      <div className=\"row text-center cart\">\n        <div className=\"col-6\">{products.length>0 ?loadAllProducts(products):(<h3>No Product Here</h3>)}</div>\n        <div className=\"col-6\"><Payments products={products} setReload={setReload}/> </div>\n        {/* <StripeCheckout products={products}\n        setReload={setReload}/> */}\n        \n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/AddCategory.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/Signin.js",["149","150"],"import React, { useState } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../styles/signin.css\"\nimport { signin, authenticate, isAutheticated } from \"../auth/helper\";\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n  const [field,setField]= useState(\"password\");\n  const { email, password, error, loading, didRedirect } = values;\n  const { user } = isAutheticated();\n\n\n  let myFunction=()=>\n  {\n      if(field==\"password\"){\n        setField(\"text\")\n      }else{\n        setField(\"password\")\n      }\n     \n    }\n\n\n  const handleChange = name => event => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: false, loading: true });\n    signin({ email, password })\n      .then(data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, loading: false });\n        } else {\n          authenticate(data, () => {\n            setValues({\n              ...values,\n              didRedirect: true\n            });\n          });\n        }\n      })\n      .catch(console.log(\"signin request failed\"));\n  };\n\n  const performRedirect = () => {\n\n    \n\n    \n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return <Redirect to='/admin/dashboard' />\n      } else {\n        return <Redirect to='/admin/dashboard' />;\n      }\n    }\n    if (isAutheticated()) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  const loadingMessage = () => {\n    return (\n      loading && (\n        <div className=\"alert alert-info\">\n          <h2>Loading...</h2>\n        </div>\n      )\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const signInForm = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                onChange={handleChange(\"email\")}\n                value={email}\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"text-light\">Password</label>\n             \n              <input\n                onChange={handleChange(\"password\")}\n                value={password}\n                className=\"form-control\"\n                type={field}\n               \n              />\n               \n               \n              <input type=\"checkbox\" onClick={myFunction}/>Show Password\n            </div>\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\n      {loadingMessage()}\n      {errorMessage()}\n      {signInForm()}\n      {performRedirect()}\n      {/* <p className=\"text-white text-center\">{JSON.stringify(values)}</p> */}\n    </Base>\n  );\n};\n\nexport default Signin;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/UpdateProduct.js",["151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getCategories, getProduct,updateProduct } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\n\nconst UpdateProduct = ({match}) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = (productId) => {\n    getProduct(productId).then(data => {\n      console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ \n            ...values,\n            name:data.name,\n            description:data.description,\n            price:data.price,\n            category: data.category._id,\n            stock:data.stock,\n            formData: new FormData()\n            \n        });\n        preloadCategories();\n      }\n    });\n  };\n\n\n  const preloadCategories=()=>{\n      getCategories().then(data=>{\n          if(data.error){\n            setValues({ ...values, error: data.error });\n          }else{\n              setValues({categories: data,formData: new FormData()})\n          }\n      })\n  }\n\n  useEffect(() => {\n    preload(match.params.productId)\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true});\n    \n    updateProduct(match.params.productId,user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name,\n          getaRedirect:false\n          });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} updated successfully</h4>\n    </div>\n  );\n  \n  const warningMessage = () => (\n    <div\n      className=\"alert alert-danger mt-3\"\n      style={{ display: error  ? \"\" : \"none\" }}\n    >\n      <h4>{error}</h4>\n    </div>\n  );\n\n\n  //TODO:CREATE A REDIRECT FUNCTION\n  \n  \n \n\n\n  \n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n           onChange={handleChange(\"category\")}\n          className=\"select form-control\"\n          placeholder=\"Category\"\n          \n          >\n         \n          {categories &&\n            categories.map((cate, index) => (\n              <option multiple key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n        \n       \n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {warningMessage()}\n          {createProductForm()}\n          {/* { {...values,getaRedirect} && <div>I will be visible after ~1000ms</div>} */}\n          \n          </div>\n      </div>\n    </Base>\n  );\n};\n//<Redirect to='/admin/dashboard'/>\nexport default UpdateProduct;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/UpdateCategories.js",["156"],"import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { isAutheticated } from '../auth/helper'\nimport Base from '../core/Base'\nimport {updateCategory, getCategory} from './helper/adminapicall'\n\nconst UpdateCategory=({match})=> {\n    const { user, token } = isAutheticated();\n    const [name, setName] = useState('')\n    const [error, setError] = useState(false)\n    const [success, setSuccess] = useState(false)\n    \n    const goBack=()=>(\n        <div className='mt-5' >\n            <Link className='btn btn-sm btn-info m-3' to='/admin/dashboard'>Admin Home</Link>\n        </div>\n    )\n\n\n    const handleChange=(event)=>{\n        setError('');\n        setName(event.target.value)\n\n    }\n\n\n    const preload = (categoryId) => {\n       \n        getCategory(categoryId).then(data => {\n        //   console.log(data);\n          if (data.error) {\n          console.log(data.error)\n          } else {\n            setName(data.name)\n          }\n        });\n      };\n\n      useEffect(() => {\n        preload(match.params.categoryId);\n      }, []);\n\n\n    const onSubmit=(event)=>{\n\n        event.preventDefault()\n        setError('');\n        setSuccess(false)\n\n        //backedn req\n        updateCategory(match.params.categoryId,user._id,token,{name})\n        .then(data=>{\n            console.log(data)\n            if(data.error){\n                setError(true)\n            }else{\n                setError('')\n                setSuccess(true)\n                setName(data.name)\n            }\n        })\n }\n\n\n const successMesasge=()=>{\nif(success){\n    return <h4 className='text-success'>Category updated successsfully</h4>\n}\n\n }\n\n const warningMessage=()=>{\n     if(error){\n         return <h4 className='text-alert'> category update failed</h4>\n     }\n }\n    const myCategoryForm=()=>(\n        <form >\n            <div className='form-group'>\n                <p className='lead m-3'>Update the category</p>\n                <input type='text'\n                 className='form-control m-3'\n                  onChange={handleChange}\n                  value={name}\n                  autofocus\n                   required\n                    placeholder='ex. summer' />\n\n                <button onClick={onSubmit} className='btn btn-outline-info m-3'>Update Category</button>\n            </div>\n        </form>\n    )\n    \n    return (\n        <Base title='Create categorty here' description='you can create a category here' className='container bg-info p-4'>\n            <div className='row bg-white rounded'>\n                <div clssname='col-md-8 offset-md-2'>\n                    {successMesasge()}\n                    {warningMessage()}\n                    {myCategoryForm()}\n                    {goBack()}\n                    \n                </div>\n            </div>\n        </Base>\n    )\n}\n\nexport default UpdateCategory;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/ManageProducts.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/ManegeCategories.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Home.js",["157","158","159","160","161"],"import React,{useState,useEffect} from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { getProduct } from \"./helper/coreapicalls\";\nimport { getCategories } from \"../admin/helper/adminapicall\";\n\n\nexport default function Home() {\n  \nconst [products, setProducts] = useState([])\nconst [categories, setCategories] = useState([])\n\nconst [error,setError]= useState(false)\nconst [cate,setCate]=useState(\"All\");\nconst loadAllProduct=()=>{\n  getProduct().then(data=>{\n    console.log(data)\n    if(data.error){\n      setError(data.error)\n    }else if(cate==\"All\"){\n      setProducts(data)\n    }else{\n      console.log(cate)\n      let val=data.filter(prod=>prod.category.name == cate)\n      setProducts(val)\n      \n    }\n  })\n}\nconst loadAllCategory=()=>{\n  getCategories().then(data=>{\n   \n   \n    if(data.error){\n      setError(data.error)\n    }else{\n      setCategories(data)\n    }\n  })\n}\n\nconst handleVal=e=>{\n\n setCate(e.target.value) \n\n}\nuseEffect(()=>{\nloadAllProduct()\nloadAllCategory()\n\n},[cate])\n\nreturn (\n    <Base>\n    <div className=\"mainP\">\n    {(products.length)===0? (<div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>):<div className=\"home\">\n    \n    <p>Sort By Category</p>\n    <select onChange={handleVal} className=\"btn bg-info filter\">\n    <option className=\"ng-success\" value={\"All\"}>All</option>\n      {\n        categories.map((category,index)=>(\n<option className=\"bg-success\" key={index}  value={category.name}>{category.name}</option>\n        ))\n      }\n    </select>\n\n    \n      <div className=\"row  text-center\">\n      {\n        \n        \n        <div className='row'>{products.map((product,index)=>{\n         \n         \n          return(\n\n           \n            <div key={index} className='col mb-4'>\n            \n              <Card product={product} className=\"card\"/>\n            </div>\n          )\n        })}</div>\n        \n        }\n      </div>\n    \n\n      </div>}\n      </div>\n    </Base>\n  );\n}\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/AddProduct.js",["162","163","164","165","166"],"import React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getCategories, createaProduct } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst AddProduct = () => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = () => {\n    getCategories().then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({ ...values, categories: data, formData: new FormData() });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload();\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true});\n    createaProduct(user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name,\n          getaRedirect:false\n          });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} created successfully</h4>\n    </div>\n  );\n  \n  const warningMessage = () => (\n    <div\n      className=\"alert alert-danger mt-3\"\n      style={{ display: error  ? \"\" : \"none\" }}\n    >\n      <h4>{error}</h4>\n    </div>\n  );\n\n\n  //TODO:CREATE A REDIRECT FUNCTION\n  \n  \n \n\n\n  \n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Create Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {warningMessage()}\n          {createProductForm()}\n          {/* { {...values,getaRedirect} && <div>I will be visible after ~1000ms</div>} */}\n          \n          </div>\n      </div>\n    </Base>\n  );\n};\n//<Redirect to='/admin/dashboard'/>\nexport default AddProduct;\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/ManageUser.js",["167","168","169","170","171","172"],"import React,{ useEffect, useState } from 'react';\nimport Base from \"../../core/Base\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getUser, updateUser } from './userapicalls';\nimport { isAutheticated } from '../../auth/helper';\n\n\n\n\nconst UpdateUser = ()=>{\n    const userId = isAutheticated() && isAutheticated().user._id;\n    const token = isAutheticated() && isAutheticated().token;\n\n    \n    const [user,setUser]=useState({\n    \n        name:\"\",\n        lastname:\"\",\n        email:\"\",\n        phnumber:\"\",\n        address1:\"\",\n        address2:\"\",\n        postalcode: \"\",\n        error:false,\n        success:false,\n        redirect:false\n})\n\n\nconst {name,email,lastname,phnumber,postalcode,address1,address2,error,success,redirect}=user;\n\nconst handleChange = name => event => {\n    setUser({ ...user, error: false, [name]: event.target.value });\n  };\n\nconst preload=(userId,token)=>{\n    getUser(userId,token).then(data=>{\n        console.log(data)\n        if(data.error){\n          return setUser({...user,error:data.error})\n        }else{\n            return setUser({...user,name: data.name,lastname: data.lastname, email: data.email,phnumber: data.phnumber,address1: data.address1,address2: data.address2,postalcode: data.postalcode})\n        }\n        })\n}\nconst setRedirect=()=>{\n  setTimeout(() => {\n    if(success== true){\n       setUser({...user,redirect: true})\n    }\n  }, 3000);\n}\n\nconst fun=()=>{\n  if(redirect== true){\n    return <Redirect to=\"/user/dashboard\"/>\n  }\n}\n\nuseEffect(() => {\n    preload(userId,token)\n    setRedirect()\n  }, [success]);\n\n\n  const onSub = event => {\n    event.preventDefault();\n    setUser({ ...user, error: false });\n    updateUser(userId,token,{name,email,lastname,address1,phnumber,postalcode,address2})  //this signup has been brought from the  helper\n      .then(data => {\n        if (data.error) {\n          setUser({...user, error: data.error})\n        } else {\n          setUser({\n            ...user,\n            name: \"\",\n            lastname:\"\",\n            email: \"\",\n            phnumber:\"\",\n            address1:\"\",\n            address2:\"\",\n            postalcode: \"\",\n            error: false,\n            success: true\n          });\n        }\n      }).then(\n         fun()\n       \n      )\n      \n  };\n\n  const successMesasge=()=>{\n    if(success == true){\n        return <h4 className='text-success'>Category updated successsfully</h4>\n        \n    }\n    \n     }\n    \n     const warningMessage=()=>{\n         if(error == true){\n             return <h4 className='text-alert'> error</h4>\n         }\n     }\n\n\nreturn(\n    <>\n    <Base>\n    \n       <h2 className=\"text-center\">Edit your user data here</h2>\n       <div className=\"text-center\">\n       {successMesasge()}\n       {warningMessage()}\n       {fun()}\n       </div>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-sm-3 text-left\">\n          <form>\n            <div className=\"form-group\">\n            <label className=\"text-light\">Name</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"name\")}\n                type=\"text\"\n                value={name}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Email</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"email\")}\n                type=\"email\"\n                value={email}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Lastname</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"lastname\")}\n                type=\"text\"\n                value={lastname}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Phone Number</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"phnumber\")}\n                type=\"text\"\n                value={phnumber}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Address Line 1</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"address1\")}\n                type=\"text\"\n                value={address1}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Address Line 2</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"address2\")}\n                type=\"text\"\n                value={address2}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"text-light\">Postal Code</label>\n              <input\n                className=\"form-control\"\n                onChange={handleChange(\"postalcode\")}\n                type=\"text\"\n                value={postalcode}\n              />\n            </div>\n\n            \n            <button onClick={onSub} className=\"btn btn-success btn-block\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    \n  \n   </Base>\n    </>\n)\n\n}\n\n\nexport default UpdateUser;","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/AdminRoutes.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/PrivateRoutes.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Base.js",["173","174","175","176","177","178","179","180","181","182"],"import React from \"react\";\nimport Menu from \"./Menu\";\nimport \"../styles/footer.css\"\nimport \"../styles/footer-dark.css\"\nconst Base = ({\n  \n  className = \"bg-dark text-white p-4\",\n  children\n}) => (\n  <div>\n    <Menu />\n    \n    <div className=\"container-fluid\">\n      \n      <div className={className}>{children}</div>\n    </div>\n    <footer className=\"footer footer-dark  mt-auto py-3\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-6 col-md-3 item\">\n                <h3>Services</h3>\n                <ul>\n                    <li><a href=\"#\">Web design</a></li>\n                    <li><a href=\"#\">Development</a></li>\n                    <li><a href=\"#\">Hosting</a></li>\n                </ul>\n            </div>\n            <div class=\"col-sm-6 col-md-3 item\">\n                <h3>About</h3>\n                <ul>\n                    <li><a href=\"#\">Company</a></li>\n                    <li><a href=\"#\">Team</a></li>\n                    <li><a href=\"#\">Careers</a></li>\n                </ul>\n            </div>\n            <div class=\"col-md-6 item text\">\n                <h3>Company Name</h3>\n                <p>Praesent sed lobortis mi. Suspendisse vel placerat ligula. Vivamus ac sem lacus. Ut vehicula rhoncus elementum. Etiam quis tristique lectus. Aliquam in arcu eget velit pulvinar dictum vel in justo.</p>\n            </div>\n            <div class=\"col item social\">\n            <a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\n            <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\n            <a href=\"#\"><i class=\"fa fa-github\"></i></a>\n            <a href=\"#\"><i class=\"fa fa-instagram\"></i></a></div>\n        </div>\n        <p class=\"copyright\">Company Name © 2021</p>\n    </div>\n      </footer>\n  </div>\n);\n\nexport default Base;\n\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/userapicalls.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/backend.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/auth/helper/index.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Payments.js",["183","184","185","186","187","188"],"import React,{useState, useEffect} from 'react'\nimport {Link, useHistory } from 'react-router-dom'\nimport { cartEmpty, loadCart } from './helper/CartHelper'\nimport { getmeToken, processPayment } from './helper/PaymentHelper'\nimport {createOrder} from './helper/OrderHelper'\nimport { isAutheticated } from '../auth/helper'\nimport DropIn from \"braintree-web-drop-in-react\";\nimport GooglePayButton from '@google-pay/button-react';\nimport \"../styles/payment.css\"\nimport showRazorpay from './razorpay'\n\n\nconst  Payments=({products,setReload=f => f, reload=undefined})=> {\n    const [info, setInfo] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\",\n        instance: {}\n      });\n      \n      const userId = isAutheticated() && isAutheticated().user._id;\n      const token = isAutheticated() && isAutheticated().token;\n    \n      const getToken = (userId, token) => {\n        getmeToken(userId, token).then(info => {\n          // console.log(\"INFORMATION\", info);\n          if (info.error) {\n            setInfo({ ...info, error: info.error });\n          } else {\n            const clientToken = info.clientToken;\n            setInfo({ clientToken });\n          }\n        });\n      };\n    \n      const showbtdropIn = () => {\n        return (\n          <div>\n            {info.clientToken !== null && products.length > 0 ? (\n              <div>\n                <DropIn\n                  options={{ authorization: info.clientToken }}\n                  onInstance={instance => (info.instance = instance)}\n                />\n               {!isAutheticated()? <button className=\"btn btn-lg btn-block signin\" ><Link className=\"signlink\"to=\"/signin\">Sign In to buy the product</Link></button> : <button className=\"btn btn-block btn-success\" onClick={onPurchase}>\n                  Buy\n                </button>}\n              </div>\n            ) : (\n              <h3> Your Cart is Empty</h3>\n            )}\n          </div>\n        );\n      };\n    \n      useEffect(() => {\n        getToken(userId, token);\n        showbtdropIn()\n        getAmount()\n      }, []);\n    \n      const onPurchase = () => {\n        setInfo({ loading: true });\n        let nonce;\n        let getNonce = info.instance.requestPaymentMethod().then(data => {\n          nonce = data.nonce;\n          const paymentData = {\n            paymentMethodNonce: nonce,\n            amount: getAmount()\n          };\n          processPayment(userId, token, paymentData)\n            .then(response => {\n              setInfo({ ...info, success: response.success, loading: false });\n              console.log(\"PAYMENT SUCCESS\");\n              const orderData = {\n                products: products,\n                transaction_id: response.transaction.id,\n                amount: response.transaction.amount,\n                status: 'Recived' \n            };\n              createOrder(userId, token, orderData);\n              cartEmpty();\n    \n              setReload(!reload);\n            })\n            .catch(error => {\n              setInfo({ loading: false, success: false });\n              console.log(\"PAYMENT FAILED\");\n            });\n        });\n      };\n   \n    const getAmount = () => {\n        let amount = 0;\n        products.map(p => {\n          amount = amount + p.price;\n          \n        });\n         \n        return amount;\n      };\n    \n      return (\n        <div>\n          {products.length >0 ?<h3>Your bill is {getAmount()} $</h3>: ''}\n          {showbtdropIn()}\n          {(products.length&&isAutheticated()) ?(\n            <div>\n            <h4>Or use</h4>\n          <GooglePayButton\n          className=\"gpaybutton\"\n  environment=\"TEST\"\n  paymentRequest={{\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [\n      {\n        type: 'CARD',\n        parameters: {\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n          allowedCardNetworks: ['MASTERCARD', 'VISA'],\n        },\n        tokenizationSpecification: {\n          type: 'PAYMENT_GATEWAY',\n          parameters: {\n            gateway: 'example',\n          },\n        },\n      },\n    ],\n    merchantInfo: {\n      merchantId: '12345678901234567890',\n      merchantName: 'Demo Merchant',\n    },\n    transactionInfo: {\n      totalPriceStatus: 'FINAL',\n      totalPriceLabel: 'Total',\n      totalPrice: `${getAmount()}`,\n      currencyCode: 'USD',\n      countryCode: 'US',\n    },\n    callbackIntents: ['PAYMENT_AUTHORIZATION'],\n    shippingAddressRequired: true,\n\n  }}\n  onLoadPaymentData={paymentRequest => {\n    console.log('load payment data', paymentRequest);\n  }}\n  onPaymentAuthorized={paymentData=>{\n    console.log('Payment autharize success', paymentData);\n    return {transactionState: 'SUCCESS'}\n  }}\n\n  buttonType=\"long\"\n/>\n</div>\n ):\"\"}\n{/* <h4>Or Use</h4>\n<button type=\"button\"  class=\"btn btn-primary btn-lg btn-block\"><a onClick={showRazorpay}>Rezorpay</a></button> */}\n        </div>\n      );\n    \n}\n\nexport default Payments;\n\n\n\n ","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Card.js",["189","190","191","192"],"import React,{useEffect,useState} from 'react'\nimport { Redirect } from 'react-router-dom';\nimport ImageHelper from '../user/helper/ImageHelper';\nimport { addItemToCart, removeItemFromCart } from './helper/CartHelper';\n import \"../styles/card.css\";\n\n    \n    const Card = ({product, addtoCart= true, removeFromCart=false,setReload=f=>f,reload=undefined\n    }) => {\n\n\nconst [redirect, setRedirect]= useState(false)\nconst [count, setCount] = useState(product.count)\n\nconst cardTitle= product?product.name:'a photo'\nconst cardDescription= product?product.description:'a default description'\nconst cardPrice= product? product.price :'default'\nconst cardStock= product?product.stock: '0'\nconst cardCatName= product?product.category.name:'default category'\n\nconst addToCart=()=>{\n  addItemToCart(product, ()=>setRedirect(true))\n}\n\nconst getARedirect=(redirect)=>{\n  if(redirect){\n    return <Redirect to='/cart'/>\n  }\n}\n\nconst showAddToCart = addtoCart => {\n  return (\n    addtoCart && (\n      <button\n        onClick={addToCart}\n        className=\"btn btn-block btn-outline-success mt-2 mb-2\"\n      >\n        Add to Cart\n      </button>\n    )\n  );\n};\n\n\n        const showRemoveFromCart=(removeFromCart)=>{\n           return (\n            removeFromCart&& ( <button\n            onClick={() => {\n              removeItemFromCart(product._id)\n              setReload(!reload)\n            }}\n            className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\n          >\n            Remove from cart\n          </button>\n            \n           ))\n        }\n        return (\n          <div className=\"card text-white bg-dark border border-info \" >\n            <div className=\"card-header text-uppercase lead\">{cardTitle}</div>\n            <div className=\"card-body\">\n            {getARedirect(redirect)}\n              <ImageHelper  product={product}/>\n              <p className=\"lead bg-success font-weight-normal text-wrap\">\n                {cardDescription}\n              </p>\n              <div className=\"row\">\n              <p className=\"col-sm-6 mx-auto bg-info\" >\n               Stock: {cardStock}\n              \n              </p>\n              {/* <p className=\"col-8 bg-warning\"> Category:  {cardCatName}</p> */}\n              </div>\n              \n              <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cardPrice}</p>\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  {showAddToCart(addtoCart)}\n                </div>\n                <div className=\"col-12\">\n                 {showRemoveFromCart(removeFromCart)}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      };\n    \n  export default Card;\n\n// return (\n//   <div class=\"card\" style=\"width: 18rem;\">\n//     <ImageHelper  product={product} className=\"card-img-top\"/>\n//   <div class=\"card-body\">\n//   {getARedirect(redirect)}\n           \n//     <h5 class=\"card-title\">{cardTitle}</h5>\n//     <p class=\"card-text\"> {cardDescription}</p>\n//     <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cardPrice}</p>\n//               <div className=\"row\">\n//                 <div className=\"col-12\">\n//                   {showAddToCart(addtoCart)}\n//                 </div>\n//                 <div className=\"col-12\">\n//                  {showRemoveFromCart(removeFromCart)}\n//                 </div>\n//     <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n//   </div>\n// </div>\n\n//)","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/CartHelper.js",["193"],"export const addItemToCart=(item,next)=>{\n    let cart =[]\n    if(typeof window !== undefined){\n        if(localStorage.getItem('cart')){\n            cart= JSON.parse(localStorage.getItem('cart'))\n\n        }\n        cart.push({\n            ...item,\n            count: 1\n        })\n        localStorage.setItem('cart', JSON.stringify(cart))\n        next();\n    }\n}\n\nexport const loadCart = () => {\n    if (typeof window !== undefined) {\n      if (localStorage.getItem(\"cart\")) {\n        return JSON.parse(localStorage.getItem(\"cart\"));\n      }\n    }\n  };\n  \n\n  export const removeItemFromCart = productId => {\n    let cart = [];\n    if (typeof window !== undefined) {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      cart.map((product, i) => {\n        if (product._id === productId) {\n          cart.splice(i, 1);\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n    return cart;\n  };\n  \n\n  export const cartEmpty= next=>{\n      if(typeof window !== undefined){\n          localStorage.removeItem('cart')\n          let cart = [];\n          localStorage.setItem(\"cart\", JSON.stringify(cart));\n          next()\n      }\n  }\n\n  ","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/coreapicalls.js",["194"],"import React from 'react'\nimport { API } from '../../backend'\n\n export const getProduct=()=> {\n    return (\n        fetch(`${API}/products`, {method:'GET'}).then(response=>{\n            return response.json()\n        }).catch(err=>console.log(err))\n    )\n}\n\n\nexport const loadCart=()=>{\n    if(typeof window !== undefined){\n        if(localStorage.getItem('cart')){\n            return JSON.parse(localStorage.getItem('cart'))\n }\n\n}}","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/admin/helper/adminapicall.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/Menu.js",["195","196","197","198","199","200","201","202","203","204"],"import React,{Fragment} from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { signout, isAutheticated } from \"../auth/helper\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport '../styles/nav.css'\n\nconst currentTab =(history,path)=>{\n  if(history.location.pathname===path){\n    return {color:'#2ecc72'}\n  }else{\n  return {color:'#FFFFFF'}\n  }\n} \n\n\n// <ul className=\"nav nav-tabs bg-dark\">\n// <li className=\"nav-item\">\n//   <Link  style={currentTab(history,'/')} className=\"nav-link\" to=\"/\">\n//     Home\n//   </Link>\n// </li>\n// <li className=\"nav-item\">\n//   <Link style={currentTab(history,'/cart')} className=\"nav-link\" to=\"/cart\">\n//     Cart\n//   </Link>\n// </li>\n// {isAutheticated() && isAutheticated().user.role===0 &&(\n// <li className=\"nav-item\">\n//   <Link  style={currentTab(history,'/user/dashboard')} className=\"nav-link\" to=\"/user/dashboard\">\n//     U.Dashboard\n//   </Link>\n// </li>\n// )}\n// {isAutheticated() && isAutheticated().user.role===1 &&(\n//   <li className=\"nav-item\">\n//   <Link style={currentTab(history,'/admin/dashboard')} className=\"nav-link\" to=\"/admin/dashboard\">\n//     A. Dashboard\n//   </Link>\n// </li>\n// )}\n\n// </ul>\n// </div>\n\nconst Menu=({history})=>{\n\n\n\n  return(\n    <nav className=\"navbar navbar-light navbar-expand-md navigation-clean-button\">\n    <div className=\"container\"><a className=\"navbar-brand\" href=\"#\">CuteTees</a><button data-toggle=\"collapse\" data-target=\"#navcol-1\" class=\"navbar-toggler\"><span class=\"sr-only\">Toggle navigation</span><span class=\"navbar-toggler-icon\"></span></button>\n        <div className=\"collapse navbar-collapse\" id=\"navcol-1\">\n            <ul className=\"navbar-nav mr-auto\">\n                {/* <li className=\"nav-item\"><a class=\"nav-link active\" href=\"#\">First Item</a></li>\n                <li className=\"nav-item\"><a class=\"nav-link\" href=\"#\">Second Item</a></li> */}\n                <li className=\"nav-item\">\n   <Link  style={currentTab(history,'/')} className=\"nav-link\" to=\"/\">\n     Home\n   </Link>\n </li>\n                <li className=\"nav-item\">\n                <Link style={currentTab(history,'/cart')} className=\"nav-link\" to=\"/cart\">\n    <i class=\"fa fa-lg fa-shopping-cart\"></i>\n   </Link>\n </li>\n\n            </ul>\n            <span className=\"navbar-text\">\n            {isAutheticated() && isAutheticated().user.role===0 &&(\n\n  \n  <Link  style={currentTab(history,'/user/dashboard')} className=\"info\"   to=\"/user/dashboard\">\n  <i class=\"fa fa-lg fa-user\"></i>\n  </Link>\n\n)}\n{isAutheticated() && isAutheticated().user.role===1 &&(\n  \n  <Link style={currentTab(history,'/admin/dashboard')} className=\"pr-4 active\" to=\"/admin/dashboard\">\n  <i class=\"fas fa-lg fa-user-ninja\"></i>\n  </Link>\n\n)}\n            \n            {!isAutheticated() &&\n  (\n    <div>\n  \n    <Link style={currentTab(history,'/signup')} className=\"btn btn-info action-button \" to=\"/signup\">\n    \n      Signup\n     \n    </Link>\n  \n  \n  <span className=\"navbar-text\">\n  \n    <Link style={currentTab(history,'/signin')} className=\"nav-link login\" to=\"/signin\">\n    \n      Sign In\n      \n    </Link>\n    \n  </span>\n  </div>\n  )}\n  {isAutheticated() && (\n    <span className='nav-item'>\n       \n         <Link\n         className='btn action-button btn-danger  '\n         onClick={() => {\n           signout(()=>{\n             history.push('/')\n           })\n         }}\n         >\n          Signout\n         </Link>\n         \n      </span>\n  )}\n\n            \n           \n            </span>\n        </div>\n    </div>\n</nav>\n  )\n}\n\n\n\n{/* <li className=\"nav-item\" ><Link className=\"login\" >Log In</Link></li>\n            <li className=\"nav-item\" ><Link className=\"Signup\" >Sign Up</a></Link></li> */}\n\nexport default withRouter(Menu);\n","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/OrderHelper.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/helper/PaymentHelper.js",[],"/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/user/helper/ImageHelper.js",["205"],"import React from 'react'\nimport { API } from '../../backend'\nimport \"../../styles/card.css\"\n\n\nconst ImageHelper=({product})=> {\n\n\nconst imageUrl=product?`${API}/product/photo/${product._id}`:`https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`\n\n    return (\n        <div className=\"rounded border card-image border-success p-2\">\n        <img\n          src={imageUrl}\n          alt=\"photo\"\n          \n          className=\"mb-3 rounded\"\n        />\n      </div>\n    )\n}\n\n\nexport default ImageHelper","/Users/subhadipadhikary/Documents/coding/react/projfrontend/src/core/razorpay.js",[],{"ruleId":"206","severity":1,"message":"207","line":59,"column":13,"nodeType":"208","messageId":"209","endLine":59,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":9,"column":25,"nodeType":"212","messageId":"213","endLine":9,"endColumn":29},{"ruleId":"210","severity":1,"message":"214","line":17,"column":12,"nodeType":"212","messageId":"213","endLine":17,"endColumn":16},{"ruleId":"210","severity":1,"message":"215","line":17,"column":17,"nodeType":"212","messageId":"213","endLine":17,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":33,"column":12,"nodeType":"218","endLine":33,"endColumn":26},{"ruleId":"210","severity":1,"message":"219","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"220","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":22,"column":15,"nodeType":"208","messageId":"209","endLine":22,"endColumn":17},{"ruleId":"210","severity":1,"message":"221","line":3,"column":16,"nodeType":"212","messageId":"213","endLine":3,"endColumn":24},{"ruleId":"210","severity":1,"message":"222","line":32,"column":5,"nodeType":"212","messageId":"213","endLine":32,"endColumn":13},{"ruleId":"210","severity":1,"message":"223","line":33,"column":5,"nodeType":"212","messageId":"213","endLine":33,"endColumn":12},{"ruleId":"210","severity":1,"message":"224","line":36,"column":5,"nodeType":"212","messageId":"213","endLine":36,"endColumn":17},{"ruleId":"216","severity":1,"message":"225","line":74,"column":6,"nodeType":"226","endLine":74,"endColumn":8,"suggestions":"227"},{"ruleId":"216","severity":1,"message":"228","line":41,"column":10,"nodeType":"226","endLine":41,"endColumn":12,"suggestions":"229"},{"ruleId":"210","severity":1,"message":"219","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":13},{"ruleId":"210","severity":1,"message":"230","line":15,"column":8,"nodeType":"212","messageId":"213","endLine":15,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":22,"column":18,"nodeType":"208","messageId":"209","endLine":22,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":26,"column":52,"nodeType":"208","messageId":"209","endLine":26,"endColumn":54},{"ruleId":"216","severity":1,"message":"231","line":53,"column":3,"nodeType":"226","endLine":53,"endColumn":9,"suggestions":"232"},{"ruleId":"210","severity":1,"message":"221","line":3,"column":16,"nodeType":"212","messageId":"213","endLine":3,"endColumn":24},{"ruleId":"210","severity":1,"message":"222","line":31,"column":5,"nodeType":"212","messageId":"213","endLine":31,"endColumn":13},{"ruleId":"210","severity":1,"message":"223","line":32,"column":5,"nodeType":"212","messageId":"213","endLine":32,"endColumn":12},{"ruleId":"210","severity":1,"message":"224","line":35,"column":5,"nodeType":"212","messageId":"213","endLine":35,"endColumn":17},{"ruleId":"216","severity":1,"message":"233","line":52,"column":6,"nodeType":"226","endLine":52,"endColumn":8,"suggestions":"234"},{"ruleId":"210","severity":1,"message":"220","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":48,"column":15,"nodeType":"208","messageId":"209","endLine":48,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":55,"column":14,"nodeType":"208","messageId":"209","endLine":55,"endColumn":16},{"ruleId":"216","severity":1,"message":"235","line":63,"column":6,"nodeType":"226","endLine":63,"endColumn":15,"suggestions":"236"},{"ruleId":"206","severity":1,"message":"207","line":95,"column":16,"nodeType":"208","messageId":"209","endLine":95,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":103,"column":19,"nodeType":"208","messageId":"209","endLine":103,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":23,"column":25,"nodeType":"239","endLine":23,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":24,"column":25,"nodeType":"239","endLine":24,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":25,"column":25,"nodeType":"239","endLine":25,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":31,"column":25,"nodeType":"239","endLine":31,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":32,"column":25,"nodeType":"239","endLine":32,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":33,"column":25,"nodeType":"239","endLine":33,"endColumn":37},{"ruleId":"237","severity":1,"message":"238","line":41,"column":13,"nodeType":"239","endLine":41,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":42,"column":13,"nodeType":"239","endLine":42,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":43,"column":13,"nodeType":"239","endLine":43,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":44,"column":13,"nodeType":"239","endLine":44,"endColumn":25},{"ruleId":"210","severity":1,"message":"240","line":2,"column":15,"nodeType":"212","messageId":"213","endLine":2,"endColumn":25},{"ruleId":"210","severity":1,"message":"241","line":3,"column":21,"nodeType":"212","messageId":"213","endLine":3,"endColumn":29},{"ruleId":"210","severity":1,"message":"242","line":10,"column":8,"nodeType":"212","messageId":"213","endLine":10,"endColumn":20},{"ruleId":"216","severity":1,"message":"243","line":61,"column":10,"nodeType":"226","endLine":61,"endColumn":12,"suggestions":"244"},{"ruleId":"210","severity":1,"message":"245","line":66,"column":13,"nodeType":"212","messageId":"213","endLine":66,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":96,"column":24,"nodeType":"248","messageId":"249","endLine":96,"endColumn":26},{"ruleId":"210","severity":1,"message":"250","line":1,"column":15,"nodeType":"212","messageId":"213","endLine":1,"endColumn":24},{"ruleId":"210","severity":1,"message":"251","line":13,"column":8,"nodeType":"212","messageId":"213","endLine":13,"endColumn":13},{"ruleId":"210","severity":1,"message":"252","line":13,"column":15,"nodeType":"212","messageId":"213","endLine":13,"endColumn":23},{"ruleId":"210","severity":1,"message":"253","line":19,"column":7,"nodeType":"212","messageId":"213","endLine":19,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":32,"column":29,"nodeType":"248","messageId":"249","endLine":32,"endColumn":31},{"ruleId":"210","severity":1,"message":"254","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"255","line":1,"column":15,"nodeType":"212","messageId":"213","endLine":1,"endColumn":23},{"ruleId":"210","severity":1,"message":"256","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":20},{"ruleId":"210","severity":1,"message":"257","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"210","severity":1,"message":"258","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":15},{"ruleId":"210","severity":1,"message":"259","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":18},{"ruleId":"210","severity":1,"message":"260","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":14},{"ruleId":"210","severity":1,"message":"261","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":18},{"ruleId":"210","severity":1,"message":"262","line":10,"column":8,"nodeType":"212","messageId":"213","endLine":10,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":57,"column":32,"nodeType":"239","endLine":57,"endColumn":69},{"ruleId":"263","severity":1,"message":"264","line":141,"column":1,"nodeType":"265","messageId":"266","endLine":142,"endColumn":92},{"ruleId":"267","severity":1,"message":"268","line":13,"column":9,"nodeType":"239","endLine":18,"endColumn":11},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'purchases' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'API' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.","ArrayExpression",["269"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["270"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllProduct'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has missing dependencies: 'preload', 'setRedirect', 'token', and 'userId'. Either include them or remove the dependency array.",["273"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useHistory' is defined but never used.","'loadCart' is defined but never used.","'showRazorpay' is defined but never used.","React Hook useEffect has missing dependencies: 'getAmount', 'showbtdropIn', 'token', and 'userId'. Either include them or remove the dependency array.",["274"],"'getNonce' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'cardCatName' is assigned a value but never used.","'React' is defined but never used.","'Fragment' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"287","text":"288"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"289","text":"290"},"Update the dependencies array to be: [cate, loadAllProduct]",{"range":"291","text":"292"},"Update the dependencies array to be: [preload]",{"range":"293","text":"294"},"Update the dependencies array to be: [preload, setRedirect, success, token, userId]",{"range":"295","text":"296"},"Update the dependencies array to be: [getAmount, showbtdropIn, token, userId]",{"range":"297","text":"298"},[1647,1649],"[match.params.productId, preload]",[1076,1078],"[match.params.categoryId]",[1068,1074],"[cate, loadAllProduct]",[1101,1103],"[preload]",[1569,1578],"[preload, setRedirect, success, token, userId]",[2105,2107],"[getAmount, showbtdropIn, token, userId]"]